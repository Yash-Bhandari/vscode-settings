// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "tab",
        "command": "-insertNextSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "alt+`",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "alt+delete",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "enter",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "ctrl+enter",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.notebook.code.insertCellBelow"
    },
    {
        "key": "ctrl+shift+r u",
        "command": "python.datascience.runallcellsabove",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+r d",
        "command": "python.datascience.runcellandallbelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    }
]